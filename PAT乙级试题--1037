1037 在霍格沃茨找零钱（20 分）
如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱 P 和他实付的钱 A，你的任务是写一个程序来计算他应该被找的零钱。

输入格式：
输入在 1 行中分别给出 P 和 A，格式为 Galleon.Sickle.Knut，其间用 1 个空格分隔。这里 Galleon 是 [0, 10
​7
​​ ] 区间内的整数，Sickle 是 [0, 17) 区间内的整数，Knut 是 [0, 29) 区间内的整数。

输出格式：
在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。

输入样例 1：
10.16.27 14.1.28
输出样例 1：
3.2.1
输入样例 2：
14.1.28 10.16.27
输出样例 2：
-3.2.1

----------------------------------------------
#include<iostream>
#include<stdio.h>
#include<algorithm>
using namespace std;

int main(){
	int P_G, P_S, P_K;  
    int A_G, A_S, A_K;  
    char c;  
    while(cin>>P_G>>c>>P_S>>c>>P_K)  
    {  
        cin>>A_G>>c>>A_S>>c>>A_K;  
        int P_Sum = P_G*17*29 + P_S*29 + P_K;  
        int A_Sum = A_G*17*29 + A_S*29 + A_K;  
        int K = ( abs(P_Sum - A_Sum) )%29;  
        int S = ( abs(P_Sum - A_Sum) )/29%17;  
        int G =  ( abs(P_Sum - A_Sum) )/29/17;  
        if( P_Sum<=A_Sum )  
            cout<<G<<'.'<<S<<'.'<<K<<endl;  
        else  
            cout<<'-'<<G<<'.'<<S<<'.'<<K<<endl;  
    }  
    return 0;  
} 



