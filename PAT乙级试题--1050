1050 螺旋矩阵（25 分）
本题要求将给定的 N 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 m 行 n 列，满足条件：m×n 等于 N；m≥n；且 m−n 取所有可能值中的最小值。

输入格式：
输入在第 1 行中给出一个正整数 N，第 2 行给出 N 个待填充的正整数。所有数字不超过 10
​4
​​ ，相邻数字以空格分隔。

输出格式：
输出螺旋矩阵。每行 n 个数字，共 m 行。相邻数字以 1 个空格分隔，行末不得有多余空格。

输入样例：
12
37 76 20 98 76 42 53 95 60 81 58 93
输出样例：
98 95 93
42 37 81
53 20 76
58 60 76

--------------------------------------------------------

#include<stdio.h>
#include<iostream>
#include<string.h>
#include<algorithm>
#include<math.h>
using namespace std;

int cmp(const void *a,const void *b){
	int x=*(int *)a;
	int y=*(int *)b;
	return y-x;
}

int main(){
	int num,a[100000];
	int n=0,m=0,k,index=0;
	int c[100][100],temp;
	scanf("%d",&num);
	for(int i=0;i<num;i++){
		scanf("%d",&a[i]);
	}
	qsort(a,num,sizeof(int),cmp);
	m=ceil(sqrt(num));
	n=sqrt(num);
	while(m*n!=num){
		if(n*m<num){
			m++;
		}else if(n*m>num){
			n--;
		}
	}
	int i=0,j=0,count=0;
	while(num!=count){
		for(;j<n;j++){
			if(c[i][j]==0){
				c[i][j]=a[count++];
			}else{
				break;
			}
		}
		j--;i++;
		for(;i<m;i++){
			if(c[i][j]==0){
				c[i][j]=a[count++];
			}else{
				break;
			}
		}
		i--;j--;
		for(;j>=0;j--){
			if(c[i][j]==0){
				c[i][j]=a[count++];
			}else{
				break;
			}
		}
		i--;j++;
		for(;i>=0;i--){
			if(c[i][j]==0){
				c[i][j]=a[count++];
			}else{
				break;
			}
		}
		i++;j++;
	}
	for(int i=0;i<m;i++){
		for(int j=0;j<n;j++){
			printf("%d",c[i][j]);
			if(j<n-1){
				printf(" ");
			}
		}
		cout<<"\n";
	}
}



